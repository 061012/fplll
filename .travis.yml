sudo: required
dist: trusty
language: cpp
cache: ccache
env:
  global:
  - MAKEFLAGS="-j 4"
matrix:
  include:
  - stage: checkstyle
    name: checkstyle
    os: linux
    env: COMPILER=g++-6 CLANGFORMAT=clang-format-6.0
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-6
        - libgmp-dev
        - libmpfr-dev
        - libqd-dev
    before_install:
    - sudo add-apt-repository 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0
      main'
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-get update -qq
    - sudo apt-get install -qq -y clang-format-6.0
    script:
    - echo "make check-style done"
  - stage: compile
    os: linux
    compiler: gcc
    env: COMPILER=g++-4.8 CLANGFORMAT=clang-format-3.9
    addons:
      apt:
        packages:
        - g++-4.8
        - libgmp-dev
        - libmpfr-dev
        - libqd-dev
    before_install:
    - sudo add-apt-repository 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9
      main'
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-get update -qq
    - sudo apt-get install -qq -y clang-format-3.9
  - os: linux
    compiler: gcc
    env: COMPILER=g++-4.9 CLANGFORMAT=clang-format-6.0 CPPFLAGS="-DDEBUG"
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
        - libgmp-dev
        - libmpfr-dev
        - libqd-dev
    before_install:
    - sudo add-apt-repository 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0
      main'
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-get update -qq
    - sudo apt-get install -qq -y clang-format-6.0
  - os: linux
    compiler: gcc
    env: COMPILER=g++-5 CLANGFORMAT=clang-format-6.0
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-5
        - libgmp-dev
        - libmpfr-dev
        - libqd-dev
    before_install:
    - sudo add-apt-repository 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0
      main'
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-get update -qq
    - sudo apt-get install -qq -y clang-format-6.0
  - os: linux
    compiler: gcc
    env: COMPILER=g++-6 CLANGFORMAT=clang-format-6.0 CXXFLAGS="-O3 -ggdb -fprofile-arcs
      -ftest-coverage"
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-6
        - libgmp-dev
        - libmpfr-dev
        - libqd-dev
    before_install:
    - sudo add-apt-repository 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0
      main'
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-get update -qq
    - sudo apt-get install -qq -y clang-format-6.0
    script:
    - make
    - make check
    - cd fplll && gcov --object-directory .libs *.cpp && cd ..
    - make distcheck
    after_success:
    - bash <(curl -s https://codecov.io/bash)
  - os: linux
    compiler: clang
    env: COMPILER=clang++ CLANGFORMAT=clang-format-3.9
    addons:
      apt:
        packages:
        - libgmp-dev
        - libmpfr-dev
        - libqd-dev
    before_install:
    - sudo add-apt-repository 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9
      main'
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-get update -qq
    - sudo apt-get install -qq -y clang-format-3.9
  - os: osx
    compiler: clang
    env: COMPILER=clang++ CLANGFORMAT=clang-format
    before_install:
    - brew update
    - brew reinstall gmp
    - brew install autoconf clang-format ccache
    - export PATH="/usr/local/opt/ccache/libexec:$PATH"
install:
- export CXX="$COMPILER"
- "$CXX --version"
before_script:
- "./autogen.sh"
- "./configure --disable-static --with-max-enumeration-dimension=64 --with-max-parallel-enum-dim=20"
- bash .travis-check-style.sh
script:
- make
- make check
- make distcheck
notifications:
  on_success: change
  on_failure: always
deploy:
  provider: releases
  file_glob: true
  skip_cleanup: true
  api_key:
    secure: fKFa3ALGSIWZMOerK2ruJpbaFcITuWAWVYSL1Tn9LphUvOiTJIrUztaQw19372U8Der+dVhgVtmwBSWuwxYPmHUFKfsRPuLnizxwD7sRDUkZ6RgHhybRJQcl/y9e93kqxkcwzxHGvx3GmZfL24acLxl4elDHWe84YbfXvkI6N+I=
  file: fplll-*.tar.gz
  on:
    repo: fplll/fplll
    tags: true
    all_branches: true
